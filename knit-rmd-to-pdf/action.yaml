# Workflow adapted from 
# https://github.com/r-lib/actions/tree/v2/examples#render-rmarkdown

name: knit-rmd-to-pdf
description: Knit an Rmarkdown file to pdf.

inputs:
  rmd-path:
    required: true
    type: string
  renv-directory:
    required: false
    type: string
    default: .
        
runs:
  using: "composite"
  steps:
      - name: Manipulate path strings
        shell: bash
        run: |
          # Parent folder, filename, and stem of rmd_path
          RMD_PATH="${{ inputs.rmd-path }}"
          RMD_NAME=$( basename $RMD_PATH )
          STEM=$(basename $PDF_PATH)
          
          echo "RMD_PATH=\"$RMD_PATH\"" >> $GITHUB_ENV
          echo "STEM=\"$STEM\"" >> $GITHUB_ENV
  
          # Create a path to the pdf by changing the extension
          PDF_PATH=${RMD_PATH/.Rmd/.pdf}
          echo "PDF_PATH=\"$PDF_PATH\"" >> $GITHUB_ENV

          # Folder with renv.lock and the rmd's path relative to it
          RENV_DIR="${{ inputs.renv-directory }}"
          RMD_RELATIVE_PATH="$( realpath --relative-to $RENV_DIR $RMD_PATH )"

          echo "RENV_DIR=\"$RENV_DIR\"" >> $GITHUB_ENV
          echo "RMD_RELATIVE_PATH=\"$RMD_RELATIVE_PATH\"" >> $GITHUB_ENV
          
    - uses: r-lib/actions/setup-r@v2
    - uses: r-lib/actions/setup-renv@v2
      working-directory: "${{ env.RENV_DIR}}"
    
    - uses: r-lib/actions/setup-pandoc@v2
    - uses: r-lib/actions/setup-tinytex@v2
            
    - name: Render Rmarkdown files
      shell: bash
      run: |
        # to make sure a new pdf is created
        rm $PDF_PATH
        # so that renv is activated
        cd $RENV_DIR
        Rscript -e "rmarkdown::render($RMD_RELATIVE_PATH')"
    
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.STEM }}
        path: ${{ env.PDF_PATH }}
